package com.cadence.genericLib;

import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.Logger;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class WebDriverLib {
	Logger LOGGER = Logger.getLogger(WebDriverLib.class.getName());
	public void waitForPageTobeLoad(){
		Driver.driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
	}
	
	public  void waitForXpathPresent(String xpath){
		WebDriverWait wait=new WebDriverWait(Driver.driver, 60);
		wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
	}
	
	public void waitForNamePresent(String name){
		WebDriverWait wait=new WebDriverWait(Driver.driver, 60);
		wait.until(ExpectedConditions.presenceOfElementLocated(By.name(name)));
	}
	
	public  void waitForTextPresent(String textToBeVerified ){
		WebDriverWait wait=new WebDriverWait(Driver.driver, 60);
		wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[contains(text(),'" + textToBeVerified + "')]")));
	}
	
	public List<WebElement> getRowData(String rowXpath){
		List<WebElement> lst=Driver.driver.findElements(By.xpath(rowXpath));
		return lst;
	}
	
	public boolean acceptAlert(){
		boolean flag=false;
		try{
		Alert alt=Driver.driver.switchTo().alert();
		LOGGER.info("The message dispalyed on the popup is -->>" +alt.getText());
		alt.accept();
		flag=true;
		}
		catch(NoAlertPresentException t){
			LOGGER.info("Alert is Not Present");
			}
		return flag;
	}
	
	public boolean dismissAlert(){
		boolean flag=false;
		try{
		Alert alt=Driver.driver.switchTo().alert();
		LOGGER.info(alt.getText());
		alt.dismiss();
		flag=true;
		}
		catch(NoAlertPresentException t){
			LOGGER.info("Alert is Not Present");
			
		}
		return flag;
	}
	
	public boolean verifyText(String xpathOfActText, String expectedText){
		boolean flag=false;
		String actText=Driver.driver.findElement(By.xpath(xpathOfActText)).getText();
		if(actText.equals(expectedText)){
			LOGGER.info(expectedText+" is Displayed in UI");
			flag=true;
		}
		else{
			LOGGER.info(expectedText+" is Not Displayed in UI");
		}
		return flag;
	}
	
	public  boolean verifyTextPresentInUI(String expectedText ){
		boolean flag=false;
		String entirePageSource=Driver.driver.getPageSource();
		if(entirePageSource.contains(expectedText)){
			LOGGER.info(expectedText+" is Displayed in UI");
			flag=true;
		}
		else{
			LOGGER.info(expectedText+" is Not Displayed in UI");
		}
		return flag;
	}
	
	
		
	}
	


















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































